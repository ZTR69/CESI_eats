-- MySQL Script generated by MySQL Workbench
-- Sun Apr  7 19:24:58 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema CESI_eats
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `CESI_eats` ;

-- -----------------------------------------------------
-- Schema CESI_eats
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CESI_eats` DEFAULT CHARACTER SET utf8 ;
USE `CESI_eats` ;

-- -----------------------------------------------------
-- Table `CESI_eats`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`user` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(150) NOT NULL,
  `address` VARCHAR(150) NULL,
  `phone` VARCHAR(45) NULL,
  `rib` VARCHAR(45) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `sponsorship_code` INT NOT NULL,
  `friend_code` INT NULL,
  PRIMARY KEY (`id_user`, `sponsorship_code`),
  UNIQUE INDEX `id_user_UNIQUE` (`id_user` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`Restaurants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`Restaurants` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`Restaurants` (
  `id_restaurant` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Note` FLOAT NOT NULL,
  `Adress` VARCHAR(45) NOT NULL,
  `Restaurantscol` INT NULL,
  `user_id_user` INT NOT NULL,
  PRIMARY KEY (`id_restaurant`, `user_id_user`),
  UNIQUE INDEX `id_restaurant_UNIQUE` (`id_restaurant` ASC) VISIBLE,
  INDEX `fk_Restaurants_user1_idx` (`user_id_user` ASC) VISIBLE,
  CONSTRAINT `fk_Restaurants_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `CESI_eats`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`Menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`Menu` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`Menu` (
  `id_menu` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Price` VARCHAR(45) NOT NULL,
  `Restaurants_id_restaurant` INT NOT NULL,
  PRIMARY KEY (`id_menu`, `Restaurants_id_restaurant`),
  UNIQUE INDEX `id_menu_UNIQUE` (`id_menu` ASC) VISIBLE,
  INDEX `fk_Menu_Restaurants1_idx` (`Restaurants_id_restaurant` ASC) VISIBLE,
  CONSTRAINT `fk_Menu_Restaurants1`
    FOREIGN KEY (`Restaurants_id_restaurant`)
    REFERENCES `CESI_eats`.`Restaurants` (`id_restaurant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`Article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`Article` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`Article` (
  `id_article` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Price` INT NOT NULL,
  PRIMARY KEY (`id_article`),
  UNIQUE INDEX `id_article_UNIQUE` (`id_article` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`Menu_has_Article`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`Menu_has_Article` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`Menu_has_Article` (
  `Menu_id_menu` INT NOT NULL,
  `Article_id_article` INT NOT NULL,
  PRIMARY KEY (`Menu_id_menu`, `Article_id_article`),
  INDEX `fk_Menu_has_Article_Article1_idx` (`Article_id_article` ASC) VISIBLE,
  INDEX `fk_Menu_has_Article_Menu1_idx` (`Menu_id_menu` ASC) VISIBLE,
  CONSTRAINT `fk_Menu_has_Article_Menu1`
    FOREIGN KEY (`Menu_id_menu`)
    REFERENCES `CESI_eats`.`Menu` (`id_menu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Menu_has_Article_Article1`
    FOREIGN KEY (`Article_id_article`)
    REFERENCES `CESI_eats`.`Article` (`id_article`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`payment` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`payment` (
  `id_payment` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `car_number` INT NOT NULL,
  `expiration_date` DATE NOT NULL,
  `CVV` INT NOT NULL,
  `name_on_card` VARCHAR(45) NOT NULL,
  `user_id_user` INT NOT NULL,
  PRIMARY KEY (`id_payment`, `user_id_user`),
  UNIQUE INDEX `id_payment_UNIQUE` (`id_payment` ASC) VISIBLE,
  INDEX `fk_payment_user1_idx` (`user_id_user` ASC) VISIBLE,
  CONSTRAINT `fk_payment_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `CESI_eats`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`role` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`role` (
  `id_role` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id_role`),
  UNIQUE INDEX `id_role_UNIQUE` (`id_role` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`permissions` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`permissions` (
  `id_permission` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id_permission`),
  UNIQUE INDEX `id_permission_UNIQUE` (`id_permission` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`permissions_has_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`permissions_has_role` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`permissions_has_role` (
  `role_user_id_user` INT NOT NULL AUTO_INCREMENT,
  `permissions_id_permission` INT NOT NULL,
  `role_id_role` INT NOT NULL,
  PRIMARY KEY (`role_user_id_user`, `permissions_id_permission`, `role_id_role`),
  INDEX `fk_permissions_has_role_role1_idx` (`role_id_role` ASC, `role_user_id_user` ASC) VISIBLE,
  INDEX `fk_permissions_has_role_permissions1_idx` (`permissions_id_permission` ASC) VISIBLE,
  CONSTRAINT `fk_permissions_has_role_permissions1`
    FOREIGN KEY (`permissions_id_permission`)
    REFERENCES `CESI_eats`.`permissions` (`id_permission`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_permissions_has_role_role1`
    FOREIGN KEY (`role_id_role`)
    REFERENCES `CESI_eats`.`role` (`id_role`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CESI_eats`.`user_has_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CESI_eats`.`user_has_role` ;

CREATE TABLE IF NOT EXISTS `CESI_eats`.`user_has_role` (
  `role_user_id_user` INT NOT NULL AUTO_INCREMENT,
  `user_id_user` INT NOT NULL,
  `role_id_role` INT NOT NULL,
  PRIMARY KEY (`role_user_id_user`, `user_id_user`, `role_id_role`),
  INDEX `fk_user_has_role_role1_idx` (`role_id_role` ASC, `role_user_id_user` ASC) VISIBLE,
  INDEX `fk_user_has_role_user1_idx` (`user_id_user` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_role_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `CESI_eats`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id_role`)
    REFERENCES `CESI_eats`.`role` (`id_role`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE = '';
DROP USER IF EXISTS user1;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'user1';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO role (id_role, title, description) VALUES (3, 'deliveryman', 'Role for delivery personnel');
INSERT INTO role (id_role, title, description) VALUES (5, 'commercial service', 'Role for commercial service personnel');
INSERT INTO role (id_role, title, description) VALUES (4, 'technical service', 'Role for technical service personnel');
INSERT INTO role (id_role, title, description) VALUES (2, 'restorer', 'Role for restorer personnel');
INSERT INTO role (id_role, title, description) VALUES (1, 'customer', 'Role for customers');

INSERT INTO permissions (name, description) VALUES ('read', 'Read permission');
INSERT INTO permissions (name, description) VALUES ('write', 'Write permission');
INSERT INTO permissions (name, description) VALUES ('delete', 'Delete permission');
INSERT INTO permissions (name, description) VALUES ('read_all_clients', 'Read permission for all clients');
INSERT INTO permissions (name, description) VALUES ('write_all_clients', 'Write permission for all clients');
INSERT INTO permissions (name, description) VALUES ('delete_all_clients', 'Delete permission for all clients');
INSERT INTO permissions (name, description) VALUES ('suspend_all_clients', 'Suspend permission for all clients');

-- roleID 1 for customer
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 1, p.id_permission FROM permissions p WHERE p.name = 'read';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 1, p.id_permission FROM permissions p WHERE p.name = 'write';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 1, p.id_permission FROM permissions p WHERE p.name = 'delete';
-- roleID 2 for deliveryman
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 2, p.id_permission FROM permissions p WHERE p.name = 'read';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 2, p.id_permission FROM permissions p WHERE p.name = 'write';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 2, p.id_permission FROM permissions p WHERE p.name = 'delete';
-- roleID 3 for restorer
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 3, p.id_permission FROM permissions p WHERE p.name = 'read';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 3, p.id_permission FROM permissions p WHERE p.name = 'write';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 3, p.id_permission FROM permissions p WHERE p.name = 'delete';
-- roleID 4 for technical service
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 4, p.id_permission FROM permissions p WHERE p.name = 'read';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 4, p.id_permission FROM permissions p WHERE p.name = 'write';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 4, p.id_permission FROM permissions p WHERE p.name = 'delete';
-- roleID 5 for commercial service
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'read';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'write';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'delete';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'read_all_clients';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'write_all_clients';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'delete_all_clients';
INSERT INTO permissions_has_role (role_id_role, permissions_id_permission) SELECT 5, p.id_permission FROM permissions p WHERE p.name = 'suspend_all_clients';